@page "/order-management"
@using VivesRental.Sdk
@using VivesRental.Services.Model.Results
@inject OrderSdk OrderSdk
@inject NavigationManager NavigationManager

<h3>Order Management</h3>

<div class="card mb-4">
    <div class="card-body">
        <a class="btn btn-primary" href="/order-management/create">Start New Order</a>
    </div>
</div>

@if (orders == null)
{
    <div class="alert alert-info">Loading...</div>
}
else if (!orders.Any())
{
    <div class="alert alert-warning">No orders available.</div>
}
else
{
    <div class="card">
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Order Number</th>
                    <th>Customer Name</th>
                    <th>Order Date</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.CustomerFirstName @order.CustomerLastName</td>
                        <td>@order.CreatedAt</td>
                        <td>
                            <a class="btn btn-info btn-sm" href="/order-management/details/@order.Id">Details</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private List<OrderResult>? orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await OrderSdk.Find(null);
    }
}
















































































































