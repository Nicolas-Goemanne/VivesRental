@page "/product-management/create"
@using VivesRental.Sdk
@using VivesRental.Services.Model.Requests
@inject ProductSdk ProductSdk
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Create Product</PageTitle>

<h3>Create Product</h3>

<div class="card">
    <div class="card-body">
        <EditForm Model="product" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <InputText id="name" class="form-control" @bind-Value="product.Name" />
            </div>
            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <InputText id="description" class="form-control" @bind-Value="product.Description" />
            </div>
            <div class="mb-3">
                <label for="manufacturer" class="form-label">Manufacturer</label>
                <InputText id="manufacturer" class="form-control" @bind-Value="product.Manufacturer" />
            </div>
            <div class="mb-3">
                <label for="publisher" class="form-label">Publisher</label>
                <InputText id="publisher" class="form-control" @bind-Value="product.Publisher" />
            </div>
            <div class="mb-3">
                <label for="rentalExpiresAfterDays" class="form-label">Rental Expires After Days</label>
                <InputNumber id="rentalExpiresAfterDays" class="form-control" @bind-Value="product.RentalExpiresAfterDays" />
            </div>
            <div class="mb-3">
                <label for="articleCount" class="form-label">Number of Articles</label>
                <InputNumber id="articleCount" class="form-control" @bind-Value="articleCount" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code {
    private ProductRequest product = new ProductRequest();
    private int articleCount = 0;

    private async Task HandleValidSubmit()
    {
        var result = await ProductSdk.Create(product);
        if (result != null)
        {
            if (articleCount > 0)
            {
                var success = await ProductSdk.GenerateArticles(result.Id, articleCount);
                if (success)
                {
                    await JSRuntime.InvokeVoidAsync("alert", $"{articleCount} articles successfully added.");
                }
            }
            NavigationManager.NavigateTo(AppRoutes.Products.Index);
        }
    }
}
























