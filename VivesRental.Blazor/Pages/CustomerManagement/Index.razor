@page "/customer-management"
@using VivesRental.Sdk
@using VivesRental.Services.Model.Results
@inject CustomerSdk CustomerSdk

<PageTitle>Customer Management</PageTitle>

<h1 class="text-center dark-red">Customer Management</h1>

<a class="btn dark-red-btn text-white mb-3" href="/customer-management/create">Add Customer</a>

<table class="table table-striped">
    <thead>
    <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
        <th>Phone Number</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var customer in Customers)
    {
        <tr>
            <td>@customer.FirstName</td>
            <td>@customer.LastName</td>
            <td>@customer.Email</td>
            <td>@customer.PhoneNumber</td>
            <td>
                <a class="btn btn-sm btn-primary" href="/customer-management/edit/@customer.Id">Edit</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    private IList<CustomerResult> Customers { get; set; } = new List<CustomerResult>();

    protected override async Task OnInitializedAsync()
    {
        var result = await CustomerSdk.Find(null);
        if (result != null)
        {
            Customers = result;
        }

        await base.OnInitializedAsync();
    }
}




























































