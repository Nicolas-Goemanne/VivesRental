@page "/account/sign-in"
@using Microsoft.AspNetCore.Components.Authorization
@using VivesRental.Authentication
@using VivesRental.Blazor.Security
@using VivesRental.Sdk
@using VivesRental.Services.Model.Requests
@inject IdentitySdk IdentitySdk
@inject NavigationManager Navigation
@inject IBearerTokenStore TokenStore
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Sign In</PageTitle>

<h1>Sign In</h1>

<div class="card">
    <div class="card-body">
        <EditForm Model="@signInRequest" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" class="form-control" @bind-Value="signInRequest.Username" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" class="form-control" @bind-Value="signInRequest.Password" type="password" />
            </div>

            <button type="submit" class="btn btn-primary">Sign In</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </div>
</div>

@code {
    private UserSignInRequest signInRequest = new() { Username = "", Password = "" };
    private string errorMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        var result = await IdentitySdk.SignIn(signInRequest);

        if (result.Success)
        {
            TokenStore.SetToken(result.Token);
            ((TokenAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser();
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Login failed. Please check your credentials.";
        }
    }
}



































































